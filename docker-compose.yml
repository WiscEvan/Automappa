version: '3.8'

services:  

  
  postgres:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:latest
    restart: always
    ports:
      - 5672:5672
    env_file:
      - .env
    
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: celery --app=automappa.tasks.queue worker --loglevel INFO --uid automappa -E
    volumes:
      - .:/usr/src/app
    depends_on:
      - redis
      - rabbitmq
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: celery --app=automappa.tasks.queue flower --port=5555
    volumes:
      - .:/usr/src/app
    ports:
      - 5555:5555
    env_file:
      - .env
    depends_on:
      - celery

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - prometheus-data:/prometheus
      # - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - flower
  
  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

  redis:
    image: "redis:latest"
    ports:
      - 6379:6379
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    # command: automappa --debug --port 8050
    # This command allows live-reloading for dev
    # Not sure which is more appropriate for production :shrug:
    command: python -m automappa.index --debug --port 8050
    volumes:
      # /usr/src/app is location of install in Dockerfile
      - .:/usr/src/app
    ports:
      - 8050:8050
    depends_on:
      - postgres
      - rabbitmq
      - celery
      - redis

volumes:
  postgres-data:
  grafana-storage:
    driver: local
  prometheus-data:
    driver: local
  
